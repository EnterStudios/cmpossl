=pod

=head1 NAME

cmp - client for the Certificate Management Protocol (RFC4210)

=head1 SYNOPSIS

B<openssl> B<cmp>
[B<-help>]
[B<-config filename>]
[B<-section name>]

[B<-server address:port>]
[B<-proxy address:port>]
[B<-path remote_path>]
[B<-msgtimeout seconds>]
[B<-maxpolltime seconds>]

[B<-use-tls>]
[B<-tls-cert filename>]
[B<-tls-key filename>]
[B<-tls-keypass arg>]
[B<-tls-trusted filename>]
[B<-tls-host name>]

[B<-recipient name>]
[B<-srvcert filename>]
[B<-trusted filename>]
[B<-untrustedE<nbsp>filename>]
[B<-ignore_keyusage>]

[B<-ref value>]
[B<-secret arg>]
[B<-cert filename>]
[B<-key filename>]
[B<-keypass arg>]
[B<-extcerts filename>]

[B<-cmd ir|cr|kur|p10cr|rr|genm>]
[B<-geninfo OID:int:N>]
[B<-digest name>]
[B<-unprotectedrequests>]
[B<-unprotectederrors>]
[B<-extracertsout filename>]
[B<-cacertsout filename>]

[B<-newkey filename>]
[B<-newkeypass arg>]
[B<-subject name>]
[B<-issuer name>]
[B<-days number>]
[B<-reqexts name>]
[B<-popo number>]
[B<-implicitconfirm>]
[B<-disableconfirm>]
[B<-certout filename>]
[B<-verify_out filename>]

[B<-oldcert filename>]
[B<-revreason number>]
[B<-infotype name>]

[B<-certform DER|PEM|P12>]
[B<-keyform DER|PEM|P12>]
[B<-engine id>]

[B<-crls url>]
[B<-crl_download>]
[B<-policy arg>]
[B<-purpose purpose>]
[B<-verify_nameE<nbsp>name>]
[B<-verify_depth num>]
[B<-auth_level level>]
[B<-attimeE<nbsp>timestamp>]
[B<-verify_hostname hostname>]
[B<-verify_email email>]
[B<-verify_ip ip>]
[B<-ignore_critical>]
[B<-crl_check>]
[B<-crl_check_all>]
[B<-policy_check>]
[B<-explicit_policy>]
[B<-inhibit_any>]
[B<-inhibit_map>]
[B<-x509_strict>]
[B<-extended_crl>]
[B<-use_deltas>]
[B<-policy_print>]
[B<-check_ss_sig>]
[B<-trusted_first>]
[B<-suiteB_128_only>]
[B<-suiteB_128>]
[B<-suiteB_192>]
[B<-partial_chain>]
[B<-no_alt_chains>]
[B<-no_check_time>]
[B<-allow_proxy_certs>]

=head1 DESCRIPTION

The B<cmp> command is a client implementation for the Certificate
Management Protocol (CMP) as defined in RFC4210. It can be used to
request certificates from a CA server, update their certificates,
request certificates to be revoked, and perform other CMP requests.

=head1 OPTIONS

=over 4

=item B<-help>

Display a summary of all options

=item B<-config filename>

Configuration file to use. An empty string "" means none.
Default file name is taken from the environment variable 'OPENSSL_CONF'.

=item B<-section name>

Section to use within config file defining CMP options,
which may be overridden at the command line.
An empty string "" selects the section named 'default'.
Default is 'cmp'.

=back

=head2 Message transfer options

=over 4

=item B<-server address:port>

The IP address or hostname and port of the CMP server to connect to.

=item B<-proxy address:port>

The IP address or hostname and port of the proxy server,
if needed for accessing the CMP server.

=item B<-path remote_path>

HTTP path location to use for the CMP server (aka CMP alias).

=item B<-msgtimeout seconds>

Number of seconds (or 0 for infinite) a CMP message round trip is
allowed to take before a timeout error is returned. Default is 120.

=item B<-maxpolltime seconds>

Maximum total number seconds to attempt polling for
certificates on 'waiting' PKIStatus. Default is 0 (infinite).

=back


=head2 Recipient options

=over 4

=item B<-recipient name>

Distinguished Name of the CMP message recipient,
i.e. the CMP server (usually a CA or RA entity).

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

If a CMP server certificate is given with the -srvcert option, its subject
name is taken as the recipient name and the -recipient option is ignored.
If the -recipient option is not given, the recipient name defaults to the
name given in the -issuer option. If this is not given either, the name of
the issuer of the certificate given with the -oldcert option (if present,
else the certificate given with the -cert option, if present) is used.

Setting the recipient field in the CMP header is mandatory.
If none of the options allowing to derive the recipient name is given, no
suitable value for the recipient in the PKIHeader is available.
As last resort it is set to NULL-DN.

=item B<-srvcert filename>

CMP server certificate to use for verifying the protection of response messages.
May be set alternatively to the -trusted option if the certificate is available
and should be directly trusted.

If set, the issuer of the certificate is also used as the recipient of the CMP
message, overriding any potential -recipient option.

=item B<-trusted filename>

Trusted certificate(s) to use for CMP server authentication
when verifying responses, unless the -srvcert option is given.

=item B<-untrusted filename>

Intermediate certificate(s) that may be useful for constructing cert chain
for CMP server or issuing CA certificates (when verifying signature-based
message protection or verifying the newly issued certificate, respectively).

=item B<-ignore_keyusage>]

Ignore key usage restrictions in certificates at CMP level,
else 'digitalSignature' must be allowed for signature use.

=back


=head2 Sender options

=over 4

=item B<-ref value>

Reference value to use when messages are authenticated with pre-shared keys
(password-based MAC).  Implies that the B<-secret> option is also given.

=item B<-secret arg>

Source for secret value to use when messages are authenticated with
pre-shared keys (password-based MAC).For more information about the format of
B<arg> see the B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.  Implies that
the B<-ref> option is also given.

=item B<-cert filename>

The client's currently existing certificate. This will be used for
authenticating a request message using an existing certificate
(as defined in appendix E.7 of the RFC). For KUR this is also used
as certificate to be updated if the -oldcert option is not given.

=item B<-key filename>

The corresponding private key file for the client's current certificate given in
the -cert option.

=item B<-keypass arg>

Pass phrase source for the private key given with the -key option.
If not given here, the password will be prompted for if needed.
For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-extcerts filename>

File with certificates to include in the extraCerts field of requests.

=back


=head2 Generic message options

=over 4

=item B<-cmd ir|cr|kur|p10cr|rr|genm>

CMP command to execute. Currently implemented commands are:
    ir   - Initialization Request
    cr   - Certificate Request
    kur  - Key Update Request
    p10cr - PKCS#10 Certification Request
    rr   - Revocation Request
    genm - General Message

B<ir> requests initialization of an End Entity into a PKI hiearchy by means of
issuance of a first certificate.

B<cr> requests issuance of an additional certificate for an End Entity already
initialized to the PKI hieararchy.

B<p10cr> requests issuance of an additional certificate similarly to B<cr>
but uses PKCS#10 CSR format.

B<kur> requests (key) update for an existing, given certificate.

B<rr> requests revocation of an existing, given certificate.

B<genm> requests information using a General Message, where optionally
included B<InfoTypeAndValue>s may be used to state which info is of interest.
Upon receipt of the General Response, information about all received
ITAV B<infoType>s is printed to stdout.

=item B<-geninfo OID:int:N>

Set generalInfo in request PKIHeader with type OID and integer value N,
e.g., '1.2.3:int:987'.

=item B<-digest name>

Specifies name of supported digest to use in RFC 4210's MSG_SIG_ALG.
If applicable, this is used for message protection and
Proof-of-Possession (POPO) signatures.
To see the list of supported digests, use the command
I<list --digest-commands>.  Defaults to 'sha256'.

=item B<-unprotectedrequests>

Send messages without CMP-level protection.

=item B<-unprotectederrors>

Accept unprotected messages by the server even if they should have been
protected.  This applies to the following message types received from the
server:

=over 4

=item * error messages

=item * negative certificate responses (IP/CP/KUP) and revocation responses (RP)

=item * PKIConf

=back

B<WARNING:> This setting leads to unspecified behaviour and it is meant
exclusively to allow interoperability with server implementations violating
RFC 4210, e.g.:

=over 4

=item * section 5.1.3.1 allows exceptions from protecting only for special
cases:
"There MAY be cases in which the PKIProtection BIT STRING is deliberately not
used to protect a message [...] because other protection, external to PKIX, will
be applied instead."

=item * section 5.3.21 is clear on ErrMsgContent: "The CA MUST always sign it
with a signature key."

=item * appendix D.4 shows PKIConf having protection

=back

=item B<-extracertsout filename>

The file where to save any extra certificates received in a response message.

=item B<-cacertsout filename>

The file where to save any received CA certificates.

=back


=head2 Certificate request options

=over 4

=item B<-newkey filename>

The file containing the private key corresponding to the requested certificate
in IR, CR or KUR.  Default is the current client key if given.

=item B<-newkeypass arg>

Pass phrase source for the key given with the -newkey option.
If not given here, the password will be prompted for if needed.
For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-subject distinguished_name>

X509 subject DN to use in the requested certificate template.

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

=item B<-issuer distinguished_name>

X509 issuer DN, i.e., the X509 distinguished name of the CA server,
to be put in the requested certificate template in IR/CR/KUR.

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

If neither -srvcert nor -recipient is available, the name given in this option
is also set as the recipient of the CMP message.

=item B<-days number>

Number of days the new certificate is asked to be valid for.

=item B<-reqexts name>

Name of section in OpenSSL config file defining certificate request extensions.

=item B<-popo number>

Set Proof-of-Possession (POPO) method; values: 0..3.
0 = NONE, 1 = SIGNATURE (default), 2 = ENCRCERT, 3 = RAVERIFIED

=item B<-implicitconfirm>

Request implicit confirmation of the newly issued certificate.

=item B<-disableconfirm>

Do not send certificate confirmation message for newly issued certificate to
cope with broken servers not supporting implicit confirmation correctly.

=item B<-certout filename>

The file where the newly issued certificate should be saved.

=item B<-verify_out filename>

Trusted certificate(s) to use for verifying the newly issued certificate.

=back


=head2 Misc request options

=over 4

=item B<-oldcert filename>

The certificate to be updated (i.e., renewed or re-keyed) in KUR
or to be revoked in RR. This defaults to -cert in case of KUR.

If neither -srvcert, -recipient, nor -issuer is available, the name of the
issuer given in this certificate is used as the recipient of the CMP message.

=item B<-revreason number>

Set CRLReason to be included in revocation request (RR); values: 0..10
or -1 for none (which is the default).

Reason numbers defined in RFC 5280 are:
   CRLReason ::= ENUMERATED {
        unspecified             (0),
        keyCompromise           (1),
        cACompromise            (2),
        affiliationChanged      (3),
        superseded              (4),
        cessationOfOperation    (5),
        certificateHold         (6),
             -- value 7 is not used
        removeFromCRL           (8),
        privilegeWithdrawn      (9),
        aACompromise           (10) }

=item B<-infotype name>

Set InfoType name to use for requesting specific info in genm,
e.g., 'signKeyPairTypes'.

=back


=head2 Credential format options

=over 4

=item B<-certform DER|PEM|P12>

Format to try first when reading and to use for writing certificate files.
Default value is PEM.

=item B<-keyform DER|PEM|P12>

Format to try first when reading key files. Default value is PEM.

=item B<-engine id>

Specifying an crypot engine B<id> will cause L<cmp(1)> to obtain a functional
reference to the specified engine, thus initialising it if needed. The engine
will be used for all algorithms supported for keys prefixed by 'engine:'.
Engines may be defined in the OpenSSL config file as usual in an engine section.

Options specifying keys, like B<-key>, B<-newkey>, B<-tls-key> can prefix
'engine:' to engine-specific identifiers for security tokens objects held by
the engine. The following example utilizes the RFC 7512 PKCS #11 URI scheme as
supported e.g. by libp11:
'-key engine:pkcs11:object=my-private-key;type=private;pin-value=1234'

=back


=head2 TLS options

=over 4

=item B<-use-tls>

Force using TLS (even when other TLS-related options are not set)
when connecting to CMP server.

=item B<-tls-cert filename>

Client's TLS certificate. PEM format may also include certificate chain
to be provided to server.

=item B<-tls-key filename>

Private key for the client's TLS certificate.

=item B<-tls-keypass arg>

Pass phrase source for client's private TLS key.
If not given here, the password will be prompted for if needed.
For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-tls-trusted filename>

Trusted certificate(s) to use for verifying the TLS server certificate.
This implies host name validation.

=item B<-tls-host name>

Address to be checked (rather than -server address) during host name validation.

=back


=head2 Certificate verification options, for both CMP and TLS

=over 4

=item B<-crls URL>

Use given CRL(s) as primary source of certifiate revocation information.
URL may point to local file if prefixed by 'file:'.

This option enables CRL checking for, e.g., the CMP/TLS server certificate
as it is the leaf certificate of the certificate chain.
Compare B<X509_V_FLAG_CRL_CHECK>.

=item B<-crl_download>

Retrieve CRLs from distribution points given in certificates,
as secondary source.

This option enables CRL checking for, e.g., the CMP/TLS server certificate
as it is the leaf certificate of the certificate chain.
Compare B<X509_V_FLAG_CRL_CHECK>.

=item
B<-policy>, B<-purpose>, B<-verify_name>, B<-verify_depth>, B<-auth_level>,
B<-attime>, B<-verify_hostname>, B<-verify_email>, B<-verify_ip>,
B<-ignore_critical>, B<-crl_check>, B<-crl_check_all>, B<-policy_check>,
B<-explicit_policy>, B<-inhibit_any>, B<-inhibit_map>, B<-x509_strict>,
B<-extended_crl>, B<-use_deltas>, B<-policy_print>, B<-check_ss_sig>,
B<-trusted_first>, B<-suiteB_128_only>, B<-suiteB_128>, B<-suiteB_192>,
B<-partial_chain>, B<-no_alt_chains>, B<-no_check_time>, B<-allow_proxy_certs>

Set various certificate chain validation options.
See the L<verify(1)> manual page for details.

=back

=head1 EXAMPLES

Note: in these examples the '\' at line ends means
the invocation should be all on one line.

Requesting "all relevant information" with an empty General Message.
This prints information about all received ITAV B<infoType>s to stdout.

  openssl cmp -cmd genm -server 127.0.0.1:8080 -path pkix/ \
    -ref 1234 -secret pass:1234-5678-1234-5678 \
    -recipient "/CN=CMPserver"

Sending an initial request message to a CMP server running on the local
host, using a pre-shared secret key for authentication. In this example
the client does not have the CA certificate yet, so we specify the CA's
name with -recipient and save any CA certificates that we may receive
in the ./capubs.pem file.

  openssl genrsa -out cl_key.pem
  openssl cmp -cmd ir -server 127.0.0.1:8080 -path pkix/ \
    -ref 1234 -secret pass:1234-5678-1234-5678 \
    -recipient "/CN=CMPserver" \
    -newkey cl_key.pem -subject "/CN=MyName" \
    -cacertsout capubs.pem -certout cl_cert.pem

Then, when the keys for this certificate need to be updated, the client
can send a key update request.

  openssl genrsa -out cl_key_new.pem
  openssl cmp -cmd kur -server 127.0.0.1:8080 -path pkix/ \
    -cert cl_cert.pem -key cl_key.pem \
    -recipient "/CN=CMPserver" \
    -trusted capubs.pem \
    -newkey cl_key_new.pem -certout cl_cert_new.pem

=head1 SEE ALSO

L<genrsa(1)|genrsa(1)>, L<gendsa(1)|gendsa(1)>, L<x509v3_config(5)|x509(1)>

=cut
